Given an integer array nums, return an integer array counts where 
counts[i] is the number of smaller elements to the right of nums[i].


Example 1:

Input: nums = [5,2,6,1]
Output: [2,1,1,0]
Explanation:
To the right of 5 there are 2 smaller elements (2 and 1).
To the right of 2 there is only 1 smaller element (1).
To the right of 6 there is 1 smaller element (1).
To the right of 1 there is 0 smaller element.
Example 2:

Input: nums = [-1]
Output: [0]
Example 3:

Input: nums = [-1,-1]
Output: [0,0]
 
 class Solution:
    def countSmaller(self, nums: List[int]) -> List[int]:
  **********************************************************************************************************************
        #count the smaller after self element
        #if i can sort this list then i have to just print the index value
        # result = []
        # for i in range(len(nums)):
        #     count = 0
        #     for j in range(i+1,len(nums)):
        #         if nums[i]>nums[j]:
        #             count+=1

        #     result.append(count)
        #     count = 0
        # return result
****************************************************************************************************************************
        # Here's the plan:
                    #   1) Make arr, a sorted copy of the list nums.
                    #   2) iterate through nums. For each element num in nums:
                    #       2a) use a binary search to determine the count of elements
                    #         in the arr that are less than num.
                    #       2b) append that count to the answer list
                    #       2c) delete num from arr
                    #   3) return the ans list 
                    #   
                    #   For example, suppose nums = [5,2,6,1] Then arr = [1,2,5,6].
                    #       num = 5 => binsearch: arr = [1,2,/\5,6], i = 2 => ans = [2,_,_,_], del 5
                    #       num = 2 => binsearch: arr = [1,/\2,6],   i = 1 => ans = [2,1,_,_], del 2
                    #       num = 6 => binsearch: arr = [1,/\6],     i = 1 => ans = [2,1,1,_], del 6
                    #       num = 1 => binsearch: arr = [/\1],       i = 0 => ans = [2,1,1,0], del 1

  
        arr, ans = sorted(nums), []     #   <-- 1)  
        for num in nums:
            i = bisect_left(arr,num)    #   <-- 2a) bisect_left will count the number of elements in left for the num in sorted array
            ans.append(i)               #   <-- 2b)
            del arr[i]                  #   <-- 2c) after checking we are deleting the elements
            
        return ans                      #   <-- 3)
